{"version":3,"sources":["components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","user","Navbar","className","variant","expand","Brand","src","alt","data","require","App","props","getPayeeData","event","setState","vendorClicked","footerClassName","state","this","vendorDataJSX","slice","sort","a","b","parseInt","Payee","Name","charAt","reverse","map","Dropdown","Item","onClick","toggledDataJSX","Card","id","Attention","Phone","Fax","Address","Address1","Address2","City","StateOrProvince","PostalCode","Country","SubmissionDate","xmlns","width","height","fill","viewBox","d","Payment","PAN","Exp","CVV","Remittance","PayorName","remittance","Amount","InvoiceNo","PayorId","Description","style","display","textAlign","marginTop","DropdownButton","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b47ce884.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\n\n\nconst Header = ({ user }) => (\n  <Navbar className=\"header\" variant=\"dark\" expand=\"md\">\n    <Navbar.Brand className='pl-4'>\n      <img className=\" pl-4 img-responsive\" src=\"paymerang.png\" alt=\"Paymerang.com\"/>\n    </Navbar.Brand>\n  </Navbar>\n)\n\nexport default Header\n","import React, { Fragment, Component } from 'react';\nimport Header from './components/Header'\nimport { Card } from 'react-bootstrap'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n// create JS object / variable from requiring sample.json data\nconst data = require ('./Data/sample.json')\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // set data state to Object created from sample.json file via require\n      data: data,\n      // set vendorClick to false, will be true and render results\n      // when vendor button is clicked\n      vendorClicked: false,\n      // event data which will be when click on Payee from vendor menu\n      event: '',\n      // state to hold className info for footer to toggle fixed or realitive position\n      footerClassName: \"copyright-fixed py-4 text-center text-white\"\n    }\n  }\n\n  // function which sets states vendorClicked, footerClassName, and event, by accepting event data from vendor click from dropdown\n  getPayeeData = (event) => {\n    this.setState({ event : event, vendorClicked: true, footerClassName: 'copyright py-4 text-center text-white' })\n  }\n\n\n  // Add styling for the drop down menu and user prompt\n  render() {\n    const appStyle = {\n      display: 'flex',\n      textAlign: 'center',\n      marginTop: '2rem',\n    }\n\n\n    // deconstruct even from state to use for toggledDataJSX variable, and display nested data\n    const { event } = this.state\n    // create variable to map vendor \"Payee\" to drop down menu button\n    let vendorDataJSX = (\n      <div className=''>\n      {/* Sorts data by interger value of first character of payee name then reverses */}\n      {this.state.data.slice().sort((a,b) => parseInt(b.Payee.Name.charAt(0), 36) - parseInt(a.Payee.Name.charAt(0), 36)).reverse().map(data =>\n      <Dropdown.Item key={data.Payee.Name} onClick={() => this.getPayeeData(data)} >{data.Payee.Name}</Dropdown.Item>)}\n      </div>)\n\n    // Variable for JSX to display event data from vendor drop down. Displays cards and Payee, Payment, and Remittance info\n    let toggledDataJSX = ''\n    if (this.state.vendorClicked) {\n      toggledDataJSX = (\n        <div className='pb-4'>\n        {/* Div / section for Payee name -- main title card */}\n          <div className='d-flex container col-12 col-lg-8 mb-2'>\n            <Card className='shadow mb-2 col-12 mx-auto'>\n              <div className='payee-title-text mt-3 mx-auto'>PAYEE:\n                <p className='payee-name'> {event.Payee.Name} </p>\n              </div>\n            </Card>\n          </div>\n          {/* Div-section for Payee, Payment and Remittance info, allows for responsive flex box --- mobile first */}\n          <div className='justify-content-between container mb-4 col-12 col-lg-8' id=\"main-div\">\n\n            {/* Div-section for fax, address, phone -- Payee info card */}\n              <div className='col-12 col-lg-6 mt-2 mb-4 '>\n                <Card className='col-12 shadow mb-3'>\n                  <div className='container mt-3 mb-1'>\n                    <p className='payment-text'>Payee Info:</p>\n                    <div className='key-text-header'> ATTN:\n                      <p>{event.Payee.Attention}</p>\n                    </div>\n                    <div className='key-text-header'> Phone:\n                      <p>{event.Payee.Phone}</p>\n                    </div>\n                    <div className='key-text-header'> Fax:\n                      <p>{event.Payee.Fax}</p>\n                    </div>\n                    <div className='key-text-header'> Address:\n                      <p>{event.Payee.Address.Address1}, {event.Payee.Address.Address2}\n                      <br></br>\n                      {event.Payee.Address.City}, {event.Payee.Address.StateOrProvince} ({event.Payee.Address.PostalCode})\n                      <br></br>\n                      {event.Payee.Address.Country}\n                      </p>\n                    </div>\n                    <div className='key-text-header'> Submission Date:\n                      <p>{event.Payee.SubmissionDate}</p>\n                    </div>\n                  </div>\n                </Card>\n\n\n                {/* Payment card object info listing selected json info */}\n                <Card className='col-12 shadow'>\n                <div className='container mt-3 mb-1'>\n                  <div className='card-header-line'>\n                    <p className='payment-text' id='payment-card-text'> Payment Card </p>\n                    {/* svg for credit card bootstrap icon */}\n                    <svg id='payment-card' xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" fill=\"currentColor\" className=\" bi bi-credit-card\" viewBox=\"0 0 16 16\">\n                    <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v1h14V4a1 1 0 0 0-1-1H2zm13 4H1v5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V7z\"/>\n                    <path d=\"M2 10a1 1 0 0 1 1-1h1a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1v-1z\"/>\n                    </svg>\n                  </div>\n                  <div className='key-text-header'> PAN:\n                    <p>{event.Payment.PAN}</p>\n                  </div>\n                  <div className='key-text-header'> Exp:\n                    <p>{event.Payment.Exp}</p>\n                  </div>\n                  <div className='key-text-header'> CVV:\n                    <p>{event.Payment.CVV}</p>\n                  </div>\n                </div>\n                </Card>\n              </div>\n\n          {/* Start Remmittance section... title for array of payments */}\n              <div className='col-12 col-lg-5' id='remittance-div-section'>\n                <h2 id='remit-title'> Remittance </h2>\n                {/* Payment card object info listing selected json info  sort by first character\n                  value of PayorName with parseInt and then reverse for alphabetical order */}\n                {event.Remittance.sort((a,b) => parseInt(b.PayorName.charAt(0), 36) - parseInt(a.PayorName.charAt(0), 36)).reverse().map(remittance =>\n                  <div key={remittance.InvoiceNo} className='d-flex col-12 container mb-3'>\n                    <Card className='col-12 shadow'>\n                    <div className='container mt-3 mb-2'>\n                      <div className='card-header-line'>\n                        <p className='payment-text'>{remittance.PayorName} </p>\n                        {/* svg for remittance.. shows it is a invoice -- bootstrap icon*/}\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-file-text\" viewBox=\"0 0 16 16\">\n                        <path d=\"M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1H5z\"/>\n                        <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\"/>\n                        </svg>\n                      </div>\n                      <div className='key-text-header'> Amount:\n                        <p>{remittance.Amount}</p>\n                      </div>\n                      <div className='key-text-header'> Inovice Number:\n                        <p>{remittance.InvoiceNo}</p>\n                      </div>\n                      <div className='key-text-header'> Payor ID:\n                        <p>{remittance.PayorId}</p>\n                      </div>\n                      <div className='key-text-header'> Description:\n                        <p>{remittance.Description}</p>\n                      </div>\n                    </div>\n                    </Card>\n                </div>)}\n              </div>\n          </div>\n        </div>\n    )}\n\n  // Return HTML and JSX for atual page display\n  return (\n    <Fragment>\n    {/* Header with Paymerange LOGO */}\n      <Header />\n      <div style={appStyle} className=\"col-lg-8 container mb-4 app-style\">\n        {/* User prompt to use drop-down */}\n        <div className=\"drop-down-prompt col-7 text\">Click Vendors to see records...</div>\n        <div id='vendor-dropdown col-4'>\n          <DropdownButton variant=\"outline-info\" title=\"Vendors\">\n          <Dropdown.Header>Select below</Dropdown.Header>\n          {/* Mapped JSX of JSON Payee to select for render */}\n          {vendorDataJSX}\n          </DropdownButton>\n        </div>\n      </div>\n\n      <div>\n        {/* Rendered event data from sample.JSON */}\n        {toggledDataJSX}\n      </div>\n      {/* Footer section*/}\n      <div className={this.state.footerClassName}>\n        <div className=\"container\"><small>Copyright © Paymerang 2021</small></div>\n      </div>\n    </Fragment>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'bootstrap';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}